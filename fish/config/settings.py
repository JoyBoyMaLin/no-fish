"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
import time

import environ
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
env = environ.Env()

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-9z-hc%ge9rgds_9%ablxmple0^7pu!ynrbef=+emps$#7a1w5s'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = env.list('FISH_ALLOWED_HOST', default=[])

# Application definition

INSTALLED_APPS = [
    'nested_inline',
    'simpleui_captcha',
    'simpleui',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'phonenumber_field',
    'app.apps.FishConfig',
    'account.apps.AccountConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': env('FISH_DB_NAME'),
        'USER': env('FISH_DB_USER'),
        'PASSWORD': env('FISH_DB_PASSWORD'),
        'HOST': env('FISH_DB_HOST'),
        'PORT': env('FISH_DB_PORT'),
        'ATOMIC_REQUESTS': True,
        'CONN_MAX_AGE': 10,
        'OPTIONS': {
            'charset': 'utf8mb4',
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/
LANGUAGE_CODE = 'zh-hans'
LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
X_FRAME_OPTIONS = 'ALLOWALL'

XS_SHARING_ALLOWED_METHODS = ['POST', 'GET', 'OPTIONS', 'PUT', 'DELETE']

LOGIN_REDIRECT_URL = 'home'

LOGIN_URL = 'dashboard_login'

AUTH_USER_MODEL = 'account.User'
SIMPLEUI_CONFIG = {
    'system_keep': False,
    'menu_display': ['网站管理', '用户管理'],  # 开启排序和过滤功能, 不填此字段为默认排序和全部显示, 空列表[] 为全部不显示.
    'dynamic': True,  # 设置是否开启动态菜单, 默认为False. 如果开启, 则会在每次用户登陆时动态展示菜单内容
    'menus': [
        {
            'app': 'app',
            'name': '网站管理',
            'icon': 'fas fa-user-shield',
            'models': [{
                'name': '商品分类',
                'icon': 'fa fa-user',
                'url': '/admin/app/category/'
            }, {
                'name': '图片管理',
                'icon': 'fas fa-user-cog',
                'url': '/admin/app/photo/'
            }]
        }, {
            'app': 'account',
            'name': '用户管理',
            'icon': 'fas fa-user-shield',
            'models': [{
                'name': '用户',
                'icon': 'fa fa-user',
                'url': '/admin/account/user/'
            }, {
                'name': '权限组',
                'icon': 'fas fa-user-cog',
                'url': '/admin/auth/group/'
            }]

        }
    ]
}
SIMPLEUI_HOME_INFO = False
SIMPLEUI_HOME_ICON = 'fa fa-user'
SIMPLEUI_INDEX = 'https://www.hundunlin.com'
SIMPLEUI_STATIC_OFFLINE = True
SIMPLEUI_LOADING = False

# qcloud
DEFAULT_FILE_STORAGE = 'django_storage_qcloud.storage.QcloudStorage'
STATICFILES_STORAGE = 'django_storage_qcloud.storage.QcloudStorage'
QCLOUD_STORAGE_OPTION = {
    'SecretId': env('FISH_QCLOUD_SECRETID'),
    'SecretKey': env('FISH_QCLOUD_SECRETKEY'),
    'Region': env('FISH_QCLOUD_REGION'),
    'Bucket': env('FISH_QCLOUD_BUCKET'),
}
COS_FAST_CDN = False  # 默认加速域名是否开启

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',  # 缓存后端 Redis
        # 连接Redis数据库(服务器地址)
        # 一主带多从(可以配置个Redis，写走第一台，读走其他的机器)
        'LOCATION': [
            'redis://localhost:6379/0',
        ],
        'KEY_PREFIX': 'milky',  # 项目名当做文件前缀
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',  # 连接选项(默认，不改)
            'CONNECTION_POOL_KWARGS': {
                'max_connections': 512,  # 连接池的连接(最大连接)
            },
        }
    }
}
